When would you want to use a remote repository rather than keeping all your work local?

Couple of situations: 1. The computer I'm working from isn't mine. 2. I switch between multiple computers and need to keep them all up-to-date. 3. I'm collaborating with someone on the code.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

If your remote is public, others might be contributing code that you don't want to pull down. 

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks are use to copy someone else's code so you can make modifications. Clones are use for editing a repository's files locally. Branches are different version of the repository that you are working on. While you can technically fork your own code, it is faster to just create a branch.

What is the benefit of having a copy of the last known state of the remote stored locally?

A benefit is if you will be offline for sometime but still want to see all the changes in remote without merging with your local version.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without Git or other version control tools, I will probably have to email the files back and forth with my collaborator. If it is small changes and we clearly document it in the email, it should be as easy as using Git or Github. But for more complex changes, it will be very difficult to compare the code changes. 

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When collaborating. This let collaborators view your changes before they are added to master, correcting mistakes and other issues before they are added to the master branch. 